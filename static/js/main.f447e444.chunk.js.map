{"version":3,"sources":["components/App.jsx","index.js"],"names":["App","_useState","useState","_useState2","_slicedToArray","item","newItem","_useState3","_useState4","inputData","newData","React","createElement","className","type","onChange","event","target","value","onClick","oldItem","concat","_toConsumableArray","map","index","ReactDOM","render","document","getElementById"],"mappings":"4MAoCeA,MAlCf,WACE,IAAAC,EAAqBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA1BI,EAAIF,EAAA,GAACG,EAAOH,EAAA,GACnBI,EAA2BL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAAhCE,EAASD,EAAA,GAACE,EAAOF,EAAA,GAUxB,OACEG,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,OAAKC,UAAU,WACbF,IAAAC,cAAA,UAAI,eAEND,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAAA,SAAOE,KAAK,OAAQC,SAdV,SAACC,GACfN,EAAQM,EAAMC,OAAOC,UAcjBP,IAAAC,cAAA,UAAQO,QAZA,WACZb,GAAQ,SAACc,GACP,MAAM,GAANC,OAAAC,YAAWF,GAAO,CAACX,SAWfE,IAAAC,cAAA,YAAM,SAGVD,IAAAC,cAAA,WACED,IAAAC,cAAA,UACEP,EAAKkB,KAAI,SAACd,EAAUe,GACnB,OAAOb,IAAAC,cAAA,UAAKH,UCxBvBgB,IAASC,OAAOf,IAAAC,cAACZ,EAAG,MAAK2B,SAASC,eAAe,U","file":"static/js/main.f447e444.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n  const [item,newItem]=useState([]);\n  const [inputData,newData]= useState(\"\");\n  \n  const inputdata=(event)=>{\n    newData(event.target.value);\n  }\n  const addItem=()=>{\n    newItem((oldItem) =>{\n      return [...oldItem,inputData];\n  })\n  }\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <div className=\"form\">\n        <input type=\"text\"  onChange={inputdata}/>\n        <button onClick={addItem}>\n          <span>Add</span>\n        </button>\n      </div>\n      <div>\n        <ul>{\n          item.map((inputData,index)=>{\n           return <li>{inputData}</li>\n      })\n    }</ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE: Make this app work by applying what you've learnt.\n//1. When new text is written into the input, its state should be saved.\n//2. When the add button is pressed, the current data in the input should be\n//added to an array.\n//3. The <ul> should display all the array items as <li>s\n"],"sourceRoot":""}